@use '@angular/material' as mat;

@include mat.core();

$my-app-accent: mat.define-palette(mat.$grey-palette, A200, A100, A400);

$tts-helper-palette: (
  50: #e0efff,
  100: #b3d6ff,
  200: #80bbff,
  300: #4da0ff,
  400: #268bff,
  500: #0077ff,
  600: #006fff,
  700: #0064ff,
  800: #005aff,
  900: #0047ff,
  A100: #ffffff,
  A200: #f2f5ff,
  A400: #bfcdff,
  A700: #a6b9ff,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);

$my-app-warn: mat.define-palette(mat.$red-palette, 800);
$my-app-primary: mat.define-palette($tts-helper-palette, 600);

$my-app-theme: mat.define-dark-theme(
    (
      color: (
        primary: $my-app-primary,
        accent: $my-app-accent,
        warn: $my-app-warn,
      ),
    )
);

@include mat.all-component-themes($my-app-theme);

:root {
  --background: #050718;
  --sidebar: #12121e;

  --blue: rgba(0, 119, 255, 1);
  --blue-20: rgba(0, 119, 255, 0.2);
  --blue-5: rgba(0, 119, 255, 0.05);
  --purple: rgba(89, 24, 225, 1);
  --yellow: rgba(249, 189, 36, 1);
  
  --green: rgb(21, 180, 28);
  --green-5: rgba(21, 180, 28, 0.05);
  
  --white: rgba(255, 255, 255, 1);
  --white-5: rgba(255, 255, 255, 0.05);
  --white-10: rgba(255, 255, 255, 0.1);
  --white-20: rgba(255, 255, 255, 0.15);

  --text: rgba(255, 255, 255, 1);
  --text-inactive: rgba(255, 255, 255, 0.6);
  --header: rgba(255, 255, 255, 0.8);

  --orange: #f09845;
  --orange-5: rgba(240, 152, 69, 0.05);

  --red: #b40000;
  --red-5: rgb(180, 0, 0, 0.05);

  --off-red-bg: rgba(180, 0, 0, 0.37);
  --off-green-bg: rgba(0, 140, 0, 0.37);
}

html,
body {
  margin: 0;
  padding: 0;

  display: flex;
  height: 100%;
  width: 100%;

  font-family: 'Inter', sans-serif;
  color: white;
  background-color: var(--background);
}

a {
  text-decoration: none;

  & > app-button > button:hover {
    background-color: var(--bright-purple);
  }
}

* {
  box-sizing: border-box;
}

.notification-error {
  --mdc-snackbar-container-color: #f23a2f;
}

.notification-success {
  --mdc-snackbar-container-color: var(--green);
}

.mat-mdc-snack-bar-container .mdc-snackbar__label,
.mat-mdc-snack-bar-container
.mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) {
  color: var(--text) !important;
}

.empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 200px;
  font-size: 18px;

  color: var(--header);
  border: 2px dotted var(--white-20);
  border-radius: 6px;
}

.header {
  font-weight: 400;
  font-size: 28px;
  padding-bottom: 2rem;

  span {
    text-decoration: underline;
    text-decoration-color: var(--blue);
  }
}

app-toggle, app-button.right, app-input.right {
  position: absolute;
  right: 0;
}

app-input.right {
  input {
    min-width: 200px;
  }
  max-width: 200px;
}

mat-tab-group, .mat-mdc-tab-body-content, .section {
  display: flex;
  flex-direction: column;
  gap: 1.2rem !important;
  width: 100%;

  .header {
    color: var(--header);
    font-size: 24px;
    padding-bottom: 0;
  }
}

.warning {
  display: flex;
  flex-direction: column;
  gap: 10px;
  padding: 15px;
  border-radius: 6px;
  background-color: var(--blue-5);
  border: 1px solid var(--blue);

  &.orange {
    border: 1px solid var(--orange);
    background-color: var(--orange-5);
  }

  &.red {
    border: 1px solid var(--red);
    background-color: var(--red-5);
  }

  &.green {
    border: 1px solid var(--green);
    background-color: var(--green-5);
  }

  a {
    color: var(--blue);
  }
}

.var {
  color: var(--orange);
  font-size: 16px;
  font-family: monospace;

  &::before {
    content: '{';
  }

  &::after {
    content: '}';
  }
}

textarea {
  color: var(--text);
  border: unset;
  border-radius: 6px;
  padding: 15px 20px;
  font-family: 'Inter', sans-serif;
  margin: 0.7rem 0;

  background-color: var(--white-5);
  max-width: 100%;
  min-height: 200px;
  max-height: 400px;
  transition: border 0.2s;
  resize: vertical;

  &:focus,
  &:active {
    outline: 1px solid var(--blue) !important;
  }
}

// This is for variable tables to show example usage
.example {
  margin-top: 15px;
  display: flex;
  flex-direction: column;

  .example-text {
    color: var(--text-inactive);

    font-size: 16px;
    font-family: monospace;

    &:first-child {
      margin-bottom: 10px;
    }
  }
}

.full-width {
  width: 100%;
}

::-webkit-scrollbar {
  width: 3px;
  border-radius: 4px;
}

/* Track */
::-webkit-scrollbar-track {
  background: var(--blue-20);
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: var(--blue);
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: var(--blue);
}

a {
  color: var(--text);
}

hr {
  width: 100%;
  border: 1px solid var(--white-5);
}

/* LOTS OF UGLY MATERIAL OVERRIDES PLEASE IGNORE */

.mdc-text-field--filled:not(.mdc-text-field--disabled) {
  background-color: var(--white-5) !important;
  border: 1px solid transparent;
  border-radius: 5px;
  padding: 0;

  &:focus,
  &:active {
    border: 1px solid var(--blue);
  }
}

.mat-mdc-form-field-focus-overlay {
  background-color: var(--white-20);
  border: 1px solid var(--blue);
}

.mat-mdc-form-field-flex {
  height: 40px;
}

.mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix {
  padding: 10px;
}

.mat-mdc-form-field-subscript-wrapper {
  height: 0;
}

.mat-drawer-backdrop.mat-drawer-shown {
  background-color: rgba(0, 0, 0, 0.6) !important;
}

.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before {
  border-bottom: unset !important;
}
